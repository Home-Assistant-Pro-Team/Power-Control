{% set list_entities = 
    [  
       'switch.idromassaggio',
       'climate.camera_ac',
       'climate.salotto',
       'climate.condizionatore_salone',
       'switch.lavatrice1pm'
    ]
%}

{% macro power_control() %}
	{
		"Sensore W": "sensor.generale_power"
	}
{% endmacro %}

##############################################################
#         DA QUESTO PUNTO NON MODIFICARE
##############################################################

{% macro entities_control() %}
    {% for d in list_entities %}
        {{ d }}
    {% endfor %}
{% endmacro %}

{% macro list_device() %}
    {% set output = namespace(sensor_power_off=[], general_entity_on=[]) %}
    {# escludi spenti e non disponibili #}
    {%- for entity_on in list_entities if not states[entity_on].state in ['off', 'unavailable', 'unknown'] -%}
        {%- set output.general_entity_on = output.general_entity_on + [entity_on] -%}
        {# recupera tutte le entit√† del dispositivo #}
        {%- set entities_devices = entity_on | device_id | device_entities -%}
            {# Restituisci entity_id del sensore power se associato #}
            {%- set sensor_power = expand(entities_devices) | selectattr('state', 'is_number') | selectattr('domain', 'eq', 'sensor') | selectattr('attributes.device_class', 'defined') | selectattr('attributes.device_class', 'eq', 'power') | map(attribute='entity_id') | list -%}
        {# controlla che assorbimento sia minore di 15W #}
        {%- for entity_power_off in sensor_power if states(entity_power_off) | int(0) < 15 -%}
            {%- set output.sensor_power_off = output.sensor_power_off + [entity_on] -%} 
        {% endfor -%}  
    {% endfor -%}   
    {{ output.general_entity_on | reject('in',  output.sensor_power_off) | join(' ') }}
{% endmacro %}