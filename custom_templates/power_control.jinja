{% macro entities_control() %}
    {% set list_entities = 
         [  
			'switch.idromassaggio',
            'climate.camera_ac',
            'climate.salotto',
			'climate.condizionatore_salone',
			'switch.lavatrice1pm',
            'switch.forno'
         ]
    %}
    {% for d in list_entities %}
        {{ d }}
    {% endfor %}
{% endmacro %}

{% macro power_control() %}
	{
		"Sensore W": "sensor.shelly_em_assorbimento_casa"
	}
{% endmacro %}

##############################################################
#         DA QUESTO PUNTO NON MODIFICARE
##############################################################

{% macro list_device() %}
    {% set output = namespace(sensor_power_off=[],result=[]) %}
    {# lista controllo carichi #}
    {%- set list = state_attr('sensor.lista_carichi', 'list_device').split() -%}
    {# escludi spenti e non disponibili #}
    {%- set filter = states|selectattr('entity_id', 'in', list)|rejectattr('state', 'in',['off', 'unavailable', 'unknown'])|map(attribute='entity_id')|list-%}
    {# lista filtrate ed ordinata #}
    {%-  for on_power_off in list if on_power_off in filter  -%}
        {# recupera id dispositivo #}
        {% set id = device_id(on_power_off)%}
        {# Restituisci entity_id del sensore power se associato #}
        {%- set sensor_power =expand(device_entities(id))|selectattr('entity_id', 'match', 'sensor.')|selectattr('attributes.device_class', 'defined')|selectattr('attributes.device_class', 'eq', 'power')|map(attribute='entity_id')|list %}
        {# controlla che assorbimento sia minore di 15W #}
        {%- for power in sensor_power if states(power)|int(0) < 15 -%}
            {# entità nella lista in stato ON con sensore di potenza inferiore a 15W #}
            {%- set output.sensor_power_off = output.sensor_power_off + [on_power_off] -%}
        {% endfor %}
    {% endfor %}
    {# ottieni le entità ordinate da spegnere #}
    {% for t in list if t in filter and not t in output.sensor_power_off %}
        {{t}}
    {% endfor %}
{% endmacro %}